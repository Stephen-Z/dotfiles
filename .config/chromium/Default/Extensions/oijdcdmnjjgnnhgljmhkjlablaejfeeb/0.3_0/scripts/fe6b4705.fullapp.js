"use strict";angular.module("views/main.html",[]).run(["$templateCache",function(a){a.put("views/main.html",'<div class="main">    <div class="title" title="{{title}}">        {{title}}    </div>    <div class="url" title="{{url}}">        {{url}}    </div>    <div class="qrcode">        <div class="qr-generated-code"             data-qr-code data-qr-size="350"             data-qr-content="{{url}}"></div>    </div>    <div class="actions">        <button data-new-tab                class="btn"                data-href="http://www.the-qrcode-generator.com/#/?d={{url}}">            Edit this QR Code        </button>        <button data-new-tab                class="btn"                data-href="http://www.the-qrcode-generator.com/#/scan">            Scan a QR Code        </button>    </div></div>')}]),angular.module("templates",["views/main.html"]),angular.module("qrApp.directives",[]),angular.module("qrApp.services",[]),angular.module("qrApp.api",["qrApp.directives","qrApp.services"]),angular.module("qrExtDev",["qrExt.main","qrApp.api"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/scan",{templateUrl:"views/scan.html",controller:"ScanCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("qrExt",["templates","qrExtDev"]),angular.module("qrExtE2E",["qrExtDev","qrExt.mocks"]),angular.module("qrExt.main",[]).controller("MainCtrl",["$scope","chromeTabs",function(a,b){return b?(b.getActiveTab(function(b){a.title=b.title,a.url=b.url}),void 0):(a.url="http://www.example.com",a.title="Not loaded in chrome",void 0)}]).factory("chromeTabs",["$window","$rootScope",function(a,b){function c(a){e.tabs.query({active:!0,windowId:e.windows.WINDOW_ID_CURRENT},function(c){a(c.length?c[0]:null),b.$$phase||b.$digest()})}function d(a){e.tabs.create({url:a})}if(!a.chrome||!a.chrome.tabs)return null;var e=a.chrome;return{getActiveTab:c,create:d}}]).directive("newTab",["chromeTabs",function(a){return{restrict:"A",link:function(b,c,d){c.bind("click",function(b){b.preventDefault(),a.create(d.href)})}}}]),angular.module("qrApp.directives").directive("qrCode",["qrEncoder",function(a){var b=!a.isSupported(),c='<canvas data-ng-hide="hide"></canvas>';return b&&(c='<img data-ng-hide="hide"/>'),{scope:{content:"@qrContent",size:"@qrSize",hide:"=qrHide",margin:"@qrMargin"},template:c,replace:!0,link:function(c,d){var e=d[0],f=function(){return""!==c.margin?Number(c.margin):1},g=function(){c.hide||(b?e.src=a.getHostedURL(c.content,Number(c.size)||100,f()):a.drawOnCavas(c.content,e,f()))},h=function(){var a=c.size||100;e.width=a,e.height=a,g()};c.$watch("[content, hide, margin]",function(a,b){angular.equals(a,b)||g()},!0),c.$watch("size",h)}}}]),angular.module("qrApp.services").factory("qrEncoder",function(){function a(a,b,c){w69b.qr.encoding.drawOnCanvas(a||"",b,c)}function b(a){return w69b.qr.encoding.getSize(a)}function c(b,c,d,e){var f=document.createElement("canvas");f.width=c,f.height=c,a(b,f,d),w69b.imgtools.getCanvasAsBlob(f,e)}function d(a,b,c){return new Blob([w69b.qr.encoding.drawAsSVG(a,b,c)])}function e(a,b,c){return new Blob([w69b.qr.encoding.drawAsEPS(a,b,c)])}function f(a,b,c){var d=angular.isDefined(c)?c:1;return"http://chart.apis.google.com/chart?chs="+b+"x"+b+"&cht=qr&chld=|"+d+"&chl="+encodeURIComponent(a)}function g(a,b,c){var d=angular.isDefined(c)?c:1;return"http://gen.the-qrcode-generator.com/?dl=1&size="+b+"&margin="+d+"&content="+encodeURIComponent(a)}function h(){return"undefined"!=typeof Int32Array}return{drawOnCavas:a,getSvgBlob:d,getEpsBlob:e,getPngBlob:c,getHostedURL:f,getDownloadURL:g,isSupported:h,getSize:b}});